version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0-jammy
    container_name: doggy-nav-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: doggy_nav
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./deploy/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - doggy-nav-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Server (Egg.js)
  server:
    build:
      context: ./../.
      dockerfile: Dockerfile-Server
    container_name: doggy-nav-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGO_URL: mongodb://admin:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/doggy_nav?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-doggy-nav-super-secret-change-in-production}
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - doggy-nav-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./../.
      dockerfile: Dockerfile-Main
    container_name: doggy-nav-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      SERVER_URL: http://server:3002
    ports:
      - "3001:3001"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - doggy-nav-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Admin Panel (UmiJS + Nginx)
  admin:
    build:
      context: ./../.
      dockerfile: Dockerfile-Admin
    container_name: doggy-nav-admin
    restart: unless-stopped
    environment:
      DOGGY_SERVER: http://server:3002
    ports:
      - "8080:8080"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - doggy-nav-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  doggy-nav-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local