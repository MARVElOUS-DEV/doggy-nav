# Multi-stage build for doggy-nav-admin (UmiJS Admin Panel)
FROM node:20-alpine AS base

# Install pnpm globally
RUN npm install -g pnpm

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package.json and lock files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/doggy-nav-admin/package.json ./packages/doggy-nav-admin/
COPY packages/doggy-nav-main/package.json ./packages/doggy-nav-main/
COPY packages/doggy-nav-server/package.json ./packages/doggy-nav-server/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build the source code
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/packages/doggy-nav-admin/node_modules ./packages/doggy-nav-admin/node_modules

# Copy source code
COPY packages/doggy-nav-admin ./packages/doggy-nav-admin
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Build the application
WORKDIR /app/packages/doggy-nav-admin
ENV NODE_ENV=production

RUN pnpm build

# Production image with nginx
FROM nginx:1.25-alpine AS runner

# Create a non-root user
RUN addgroup --system --gid 1001 nginx-app
RUN adduser --system --uid 1001 nginx-app

# Copy built application
COPY --from=builder /app/packages/doggy-nav-admin/dist /usr/share/nginx/html

# Copy nginx configuration
COPY deploy/nginx-admin.conf /etc/nginx/templates/default.conf.template

# Setup proper permissions
RUN chown -R nginx-app:nginx-app /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Configure nginx to run as non-root
RUN touch /var/run/nginx.pid && \
    chown -R nginx-app:nginx-app /var/run/nginx.pid /var/cache/nginx

# Setup logging
RUN ln -sf /dev/stdout /var/log/nginx/access.log && \
    ln -sf /dev/stderr /var/log/nginx/error.log

# Switch to non-root user
USER nginx-app

EXPOSE 8080

# Environment variable for server URL
ENV DOGGY_SERVER=http://localhost:3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1

# Start nginx with environment variable substitution
CMD ["/bin/sh", "-c", "envsubst '$$DOGGY_SERVER' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]