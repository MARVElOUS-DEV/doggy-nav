# Multi-stage build for doggy-nav-server (Egg.js Backend)
FROM node:20-alpine AS base

# Install pnpm globally
RUN npm install -g pnpm

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package.json and lock files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/doggy-nav-server/package.json ./packages/doggy-nav-server/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build the source code
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/packages/doggy-nav-server/node_modules ./packages/doggy-nav-server/node_modules

# Copy source code
COPY packages/doggy-nav-server ./packages/doggy-nav-server
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Build the application
ENV NODE_ENV=production

# Install production dependencies and build
RUN pnpm ets
RUN pnpm build:ci

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

# Create a non-root user
RUN addgroup --system --gid 1001 eggjs
RUN adduser --system --uid 1001 eggjs

# Copy package.json and built application
COPY --from=builder /app/packages/doggy-nav-server/package.json ./packages/doggy-nav-server/package.json
COPY --from=builder /app/pnpm-lock.yaml ./
COPY --from=builder /app/packages/doggy-nav-server/dist ./packages/doggy-nav-server/dist
COPY --from=builder /app/packages/doggy-nav-server/dist/app.js ./packages/doggy-nav-server/app.js
COPY --from=builder /app/packages/doggy-nav-server/dist/config ./packages/doggy-nav-server/config
COPY --from=builder /app/packages/doggy-nav-server/scripts ./packages/doggy-nav-server/scripts

# Install only production dependencies
RUN pnpm install --prod --frozen-lockfile
WORKDIR /app/packages/doggy-nav-server
# Change ownership to non-root user
RUN chown -R eggjs:eggjs /app/packages/doggy-nav-server

USER eggjs

EXPOSE 3002

ENV PORT=3002
ENV EGG_SERVER_ENV=prod

CMD ["npm", "run", "docker-start"]