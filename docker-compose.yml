version: '3.8'

# Oneâ€‘key deploy using prebuilt images (built/pushed by CI)
# Defaults target ghcr.io/MARVElOUS-DEV with :latest tag.
# Override via environment when needed:
#   IMAGE_REGISTRY=ghcr.io IMAGE_NAMESPACE=YOUR_ORG IMAGE_TAG=sha-or-tag \
#   JWT_SECRET=change-me docker compose up -d

services:
  mongodb:
    image: mongo:7.0-jammy
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - doggy-nav

  server:
    image: ${IMAGE_REGISTRY:-ghcr.io}/${IMAGE_NAMESPACE:-MARVElOUS-DEV}/doggy-nav-backend:${IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3002
      # IMPORTANT: server reads host:port (or mongodb+srv URL). Do not pass full mongodb:// URL here.
      MONGO_URL: mongodb:27017
      JWT_SECRET: ${JWT_SECRET:-doggy-nav-super-secret-change-in-production}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      # Allow frontend and admin origins
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001,http://localhost:8080}
    ports:
      - '3002:3002'
    depends_on:
      - mongodb
    networks:
      - doggy-nav

  frontend:
    image: ${IMAGE_REGISTRY:-ghcr.io}/${IMAGE_NAMESPACE:-MARVElOUS-DEV}/doggy-nav-frontend:${IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      SERVER_URL: http://server:3002
    ports:
      - '3001:3001'
    depends_on:
      - server
    networks:
      - doggy-nav

  admin:
    image: ${IMAGE_REGISTRY:-ghcr.io}/${IMAGE_NAMESPACE:-MARVElOUS-DEV}/doggy-nav-admin:${IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      DOGGY_SERVER: http://server:3002
      # Optional: if server enforces client secret on all APIs, set below
      # DOGGY_SERVER_CLIENT_SECRET: ${DOGGY_SERVER_CLIENT_SECRET}
    ports:
      - '8080:8080'
    depends_on:
      - server
    networks:
      - doggy-nav

networks:
  doggy-nav:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
